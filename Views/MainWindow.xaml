<mah:MetroWindow x:Class="HumanResources.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:HumanResources.Converters"
        xmlns:local="clr-namespace:HumanResources"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"         
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Kartoteka Pracowników" Height="500" Width="1000">

    
    <!-- Bindowanie zdarzenie Loaded do właściwości w view modelu LoadedWindowCommand.-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedWindowCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <mah:MetroWindow.Resources>
        <converters:BoolToBackgroundColor x:Key="boolToBackgroundColor" />
        <converters:SalaryToBackgroundColor x:Key="salaryToBackgroundColor" />
    </mah:MetroWindow.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        
        <StackPanel Orientation="Horizontal">

            <Button
                Command ="{Binding AddEmployeeCommand}"
                Content="Dodaj"
                Height="30"
                Width="100"
                Margin="5"
             />

            <!-- Command Komenda zbindowana w Modelu Widoku -->
            <!-- CommandParameter Parametr przekazany do Metody -->
            <Button 
                Command ="{Binding EditEmployeeCommand}"
                CommandParameter="{Binding SelectedEmployee}"
                Content="Edytuj" 
                Height="30" 
                Width="100" 
                Margin="5" 
            />

            <Button 
                Command ="{Binding DeleteEmployeeCommand}"
                CommandParameter="{Binding SelectedEmployee}"
                Content="Usuń" 
                Height="30" 
                Width="100" 
                Margin="5" 
            />

            
            <ComboBox
                Height="30"
                Width="150"
                Margin="5"
                ItemsSource="{Binding Departments}"
                SelectedValue="{Binding SelectedDepartmentId}"
                DisplayMemberPath="Name"
                SelectedValuePath="Id">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding ComboBoxChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ComboBox>

            <CheckBox 
                IsChecked="{Binding ShowReleasedEmployees}"
                Content="Pokaż również pracowników zwolnionych"
                Margin="5">
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding CheckBoxChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            
            <Button  
                Command ="{Binding RefreshEmployeesCommand}"
                CommandParameter="{Binding SelectedEmployee}"
                Content="Odśwież" 
                Height="30" 
                Width="100"
                Margin="5"
             />


            <Button  
                Command ="{Binding ConectionConfigurationCommand}"
                Content="Konfiguracja" 
                Height="30" 
                Width="100"
                Margin="5"
             />

            <!-- Style ="{StaticResource ButtonRefreshStyle}" -->

        </StackPanel>

        <!-- x:Name="dataGrid" CellStyle="{StaticResource CellStyle}" -->            
        
        <DataGrid
            Grid.Row="1"
            Margin="5"
            ItemsSource ="{Binding Employees}" 
            SelectedItem="{Binding SelectedEmployee}"
            CanUserAddRows="False"
            IsReadOnly="True"
            SelectionMode="Single"
            AutoGenerateColumns="False">

            <!--
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderBrush" Value="{Binding Released, Converter={StaticResource boolToBackgroundColor}}"/>
                    <Setter Property="Background" Value="{Binding Released, Converter={StaticResource boolToBackgroundColor}}"/>
                </Style>
            </DataGrid.CellStyle>
            
            -->
            
            <!--
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding Released, Converter={StaticResource boolToBackgroundColor}}" />
                </Style>
            </DataGrid.RowStyle>    
            -->

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding Released, Converter={StaticResource boolToBackgroundColor}}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </DataGrid.RowStyle>

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>


            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Id}" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding FirstName}" Header="Imię"/>
                <DataGridTextColumn Binding="{Binding LastName}" Header="Nazwisko"/>
                <DataGridTextColumn Binding="{Binding Department.Name}" Header="Dział"/>
                
                <!--
                <DataGridTextColumn Binding="{Binding Salary}" Header="Stawka">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <Trigger Property="Text" Value="100.00">
                                    <Setter Property="Background" Value="LightGreen"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                -->

                <DataGridTextColumn Binding="{Binding Salary}" Header="Stawka">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="{Binding Salary, Converter={StaticResource salaryToBackgroundColor}}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>


                <DataGridTextColumn Binding="{Binding HireDate}" Header="Data Zatrudnienia"/>
                
                <DataGridCheckBoxColumn Binding="{Binding Released}" Header="Zwolniony">
           
                </DataGridCheckBoxColumn>


                <DataGridTextColumn Binding="{Binding ReleaseDate}" Header="Data Zwolnienia"/>
            </DataGrid.Columns>
            
            
        </DataGrid>
    </Grid>
</mah:MetroWindow>
